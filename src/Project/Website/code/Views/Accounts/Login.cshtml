@using Sitecore.Foundation.Helpers
@using Synthesis.Mvc.Extensions
@model Sitecore.Feature.Accounts.Models.ILoginSettingsItem
@{
    var formUrl = Url.RouteUrl(MvcHelpers.RouteNames.Default, new {controller = "AccountsApi", action = "Login"});
}

<li class="dropdown hidden-xs" id="loginContainer">
    <a href="#" class="btn dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
        <i class="fa fa-user"></i>
    </a>
    <div class="dropdown-menu">
        <h4>@Model.Login.Render()</h4>
        <form id="loginModal" action="@formUrl">
            <div class="login-body">

                <div class="form-group">
                    <label class="control-label" for="Email">@Model.Email.Render()</label>
                    <input class="form-control" id="popupLoginEmail" name="Email" placeholder="@Model.EmailRequiredText.RawValue" type="text" value="">

                </div>
                <div class="form-group">
                    <label class="control-label" for="Password">@Model.Password.Render()</label>
                    <input class="form-control" id="popupLoginPassword" name="Password" placeholder="@Model.PasswordRequiredText.RawValue" type="password">

                </div>
                <button type="button" class="btn btn-block btn-primary" onclick="login('loginModal')">@Model.Login.Render()</button>
                @using (Model.ForgotPasswordPage.RenderWithBody(Html, "btn btn-block btn-default"))
                {
                    @Model.ForgotPassword.Render()
                }
                
                @using (Model.RegisterPage.RenderWithBody(Html, "btn btn-block btn-default"))
                {
                    @Model.Register.Render()
                }
            </div>
        </form>
    </div>
</li>

<script type="text/javascript">
    require(['accounts/login'], function(Login) {
        return new Login({
            ele: '#loginContainer'
        });
    })
</script>